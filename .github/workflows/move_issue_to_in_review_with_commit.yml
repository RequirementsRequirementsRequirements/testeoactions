name: Move issue to "In review" in Projects v2

on:
  push:
    branches:
      - main  # Or your active branch

jobs:
  update-project-status:
    runs-on: ubuntu-latest

    steps:
      - name: Update Project field to "In review" for referenced issues
        env:
          GH_TOKEN: ${{ secrets.GH_PROJECTS_TOKEN_2 }}
        uses: actions/github-script@v7
        with:
          script: |
            const issuePattern = /(?:#|gh-)(\d+)/gi;
            const projectId = "PVT_kwHODArNsc4A4n6f";
            const fieldId = "PVTSSF_lAHODArNsc4A4n6fzgtj29U";
            const inReviewOptionId = "df73e18b";
            const commits = context.payload.commits;
            const issueNumbers = new Set();

            for (const commit of commits) {
              let match;
              while ((match = issuePattern.exec(commit.message)) !== null) {
                issueNumbers.add(Number(match[1]));
              }
            }

            if (issueNumbers.size === 0) {
              console.log("No referenced issues found.");
              return;
            }

            const graphqlWithAuth = github.graphql.defaults({
              headers: {
                authorization: `Bearer ${process.env.GH_TOKEN}`,
              },
            });

            for (const issueNumber of issueNumbers) {
              // Get node ID of the issue
              const issueData = await graphqlWithAuth(`
                query($owner: String!, $repo: String!, $issue: Int!) {
                  repository(owner: $owner, name: $repo) {
                    issue(number: $issue) {
                      id
                    }
                  }
                }
              `, {
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue: issueNumber
              });

              const issueId = issueData.repository.issue.id;

              console.log(`Setting status of issue #${issueNumber} to "In review"`);

              await graphqlWithAuth(`
                mutation {
                  updateProjectV2ItemFieldValue(
                    input: {
                      projectId: "${projectId}",
                      itemId: "${issueId}",
                      fieldId: "${fieldId}",
                      value: {
                        singleSelectOptionId: "${inReviewOptionId}"
                      }
                    }
                  ) {
                    projectV2Item {
                      id
                    }
                  }
                }
              `);
            }
