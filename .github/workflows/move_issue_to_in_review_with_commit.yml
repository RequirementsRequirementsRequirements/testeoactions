name: Move issue to "In review" in Projects v2

on:
  push:
    branches:
      - main

jobs:
  update-project-status:
    runs-on: ubuntu-latest

    steps:
                  - name: Move issue to "In review"
                    env:
                      GH_TOKEN: ${{ secrets.GH_SECRET_TOKEN }}
                    uses: actions/github-script@v7
                    with:
                      script: |
                        const issuePattern = /(?:#|gh-)(\d+)/gi;
                        const projectId = "PVT_kwDODJdNvM4A4wSl";
                        const fieldId = "PVTSSF_lADODJdNvM4A4wMzzgtqqm4";
                        const inReviewOptionId = "df73e18b";
                        const commits = context.payload.commits;
                        const issueNumbers = new Set();

                        for (const commit of commits) {
                          let match;
                          while ((match = issuePattern.exec(commit.message)) !== null) {
                            issueNumbers.add(Number(match[1]));
                          }
                        }

                        if (issueNumbers.size === 0) {
                          console.log("‚ö†Ô∏è No issues referenced in commit.");
                          return;
                        }

                        const graphqlWithAuth = github.graphql.defaults({
                          headers: {
                            authorization: `Bearer ${process.env.GH_TOKEN}`,
                          },
                        });

                        for (const issueNumber of issueNumbers) {
                          console.log(`üîç Processing issue #${issueNumber}`);

                          const issueData = await graphqlWithAuth(`
                            query($owner: String!, $repo: String!, $issue: Int!) {
                              repository(owner: $owner, name: $repo) {
                                issue(number: $issue) {
                                  id
                                }
                              }
                            }
                          `, {
                            owner: context.repo.owner,
                            repo: context.repo.repo,
                            issue: issueNumber
                          });

                          const issueId = issueData.repository.issue.id;
                          console.log("‚úÖ Issue node ID:", issueId);

                          const itemsData = await graphqlWithAuth(`
                            query($projectId: ID!) {
                              node(id: $projectId) {
                                ... on ProjectV2 {
                                  items(first: 100) {
                                    nodes {
                                      id
                                      content {
                                        ... on Issue {
                                          id
                                          number
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          `, { projectId });

                          const items = itemsData.node?.items?.nodes || [];
                          const matchingItem = items.find(item => item.content?.id === issueId);

                          if (!matchingItem) {
                            console.log(`‚ö†Ô∏è No matching project item for issue #${issueNumber}`);
                            continue;
                          }

                          const itemId = matchingItem.id;
                          console.log(`‚úÖ Found project item ID: ${itemId}`);

                          await graphqlWithAuth(`
                            mutation {
                              updateProjectV2ItemFieldValue(
                                input: {
                                  projectId: "${projectId}",
                                  itemId: "${itemId}",
                                  fieldId: "${fieldId}",
                                  value: {
                                    singleSelectOptionId: "${inReviewOptionId}"
                                  }
                                }
                              ) {
                                projectV2Item {
                                  id
                                }
                              }
                            }
                          `);

                          console.log(`üéØ Updated issue #${issueNumber} to "In review"`);
                        }
