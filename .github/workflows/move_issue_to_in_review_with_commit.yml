name: Move issue to "In review" in Projects v2

on:
  push:
    branches:
      - main

jobs:
  update-project-status:
    runs-on: ubuntu-latest

    steps:
      - name: Update Project field to "In review" for referenced issues
        env:
          GH_TOKEN: ${{ secrets.GH_PROJECTS_TOKEN_2 }}
        uses: actions/github-script@v7
        with:
          script: |
            const issuePattern = /(?:#|gh-)(\d+)/gi;
            const projectId = "PVT_kwHODArNsc4A4n6f"; // your project ID
            const fieldId = "PVTSSF_lAHODArNsc4A4n6fzgtj29U"; // Status field ID
            const inReviewOptionId = "df73e18b"; // "In review" option ID

            const commits = context.payload.commits;
            const issueNumbers = new Set();

            for (const commit of commits) {
              let match;
              while ((match = issuePattern.exec(commit.message)) !== null) {
                issueNumbers.add(Number(match[1]));
              }
            }

            if (issueNumbers.size === 0) {
              console.log("No referenced issues found.");
              return;
            }

            const graphqlWithAuth = github.graphql.defaults({
              headers: {
                authorization: `Bearer ${process.env.GH_TOKEN}`,
              },
            });

            for (const issueNumber of issueNumbers) {
              console.log(`üîç Processing issue #${issueNumber}`);

              // Step 1: Get issue's node ID
              const issueData = await graphqlWithAuth(`
                query($owner: String!, $repo: String!, $issue: Int!) {
                  repository(owner: $owner, name: $repo) {
                    issue(number: $issue) {
                      id
                    }
                  }
                }
              `, {
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue: issueNumber
              });

              const issueId = issueData.repository.issue.id;

              // Step 2: Find item in project by matching issue number
              const itemsData = await graphqlWithAuth(`
                query($projectId: ID!) {
                  node(id: $projectId) {
                    ... on ProjectV2 {
                      items(first: 100) {
                        nodes {
                          id
                          content {
                            ... on Issue {
                              id
                              number
                            }
                          }
                        }
                      }
                    }
                  }
                }
              `, {
                projectId
              });

              const items = itemsData.node.items.nodes;
              const matchingItem = items.find(item => item.content?.number === issueNumber);

              if (!matchingItem) {
                console.log(`‚ùå Issue #${issueNumber} is not in the project. Skipping.`);
                continue;
              }

              const itemId = matchingItem.id;
              console.log(`‚úÖ Found project item ID: ${itemId}`);

              // Step 3: Update "Status" field to "In review"
              await graphqlWithAuth(`
                mutation {
                  updateProjectV2ItemFieldValue(
                    input: {
                      projectId: "${projectId}",
                      itemId: "${itemId}",
                      fieldId: "${fieldId}",
                      value: {
                        singleSelectOptionId: "${inReviewOptionId}"
                      }
                    }
                  ) {
                    projectV2Item {
                      id
                    }
                  }
                }
              `);

              console.log(`üéØ Updated issue #${issueNumber} to "In review"`);
            }
