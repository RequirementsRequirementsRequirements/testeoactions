name: Move issue to "In review" when referenced

on:
  push:
    branches:
      - main  # Or your working branch

jobs:
  move-to-in-review:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read

    steps:
      - name: Move issue cards to "In review"
        uses: actions/github-script@v7
        with:
          script: |
            const issuePattern = /(?:#|gh-)(\d+)/gi;
            const projectName = 'testeo actions';
            const targetColumnName = 'In review';

            const commits = context.payload.commits;
            const issueNumbers = new Set();

            for (const commit of commits) {
              let match;
              while ((match = issuePattern.exec(commit.message)) !== null) {
                issueNumbers.add(Number(match[1]));
              }
            }

            if (issueNumbers.size === 0) {
              console.log("No referenced issues found.");
              return;
            }

            const { data: projects } = await github.rest.projects.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo
            });

            const project = projects.find(p => p.name.toLowerCase() === projectName.toLowerCase());
            if (!project) {
              core.setFailed(`Project "${projectName}" not found.`);
              return;
            }

            const { data: columns } = await github.rest.projects.listColumns({
              project_id: project.id
            });

            const targetColumn = columns.find(c => c.name.toLowerCase() === targetColumnName.toLowerCase());
            if (!targetColumn) {
              core.setFailed(`Column "${targetColumnName}" not found.`);
              return;
            }

            for (const issueNumber of issueNumbers) {
              console.log(`Processing issue #${issueNumber}...`);

              let cardMoved = false;

              for (const column of columns) {
                const { data: cards } = await github.rest.projects.listCards({
                  column_id: column.id
                });

                for (const card of cards) {
                  if (card.content_url && card.content_url.endsWith(`/issues/${issueNumber}`)) {
                    console.log(`Found card for issue #${issueNumber} in column "${column.name}". Moving to "${targetColumnName}"...`);

                    await github.rest.projects.moveCard({
                      card_id: card.id,
                      position: 'top',
                      column_id: targetColumn.id
                    });

                    cardMoved = true;
                    break;
                  }
                }

                if (cardMoved) break;
              }

              if (!cardMoved) {
                console.log(`No project card found for issue #${issueNumber}.`);
              }
            }
